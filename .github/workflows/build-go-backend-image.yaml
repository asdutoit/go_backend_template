name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env: DB_HOST=localhost
  DB_PORT=54320
  DB_USER=postgres
  DB_PASSWORD=my_password
  DB_NAME=postgres
  AWS_REGION=af-south-1
  AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}
  AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-push-to-ecr:
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-region: af-south-1
          role-to-assume: arn:aws:iam::213705928839:role/gha_oidc_assume_role
          role-session-name: go-backend-gha

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Go
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.21

      - name: Get and update git release tag
        id: git-tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
        # run: echo ::set-output name=tag::$(git describe --tags --abbrev=0 || 'latest')

      - name: Print the tag
        run: echo ${{ steps.git-tag.outputs.tag }}

      - name: Start local docker Postgres DB for Go tests
        run: |
          docker run --name local-psql -v local_psql_data_new:/var/lib/postgresql/data -p 54320:5432 -e POSTGRES_PASSWORD=my_password -d postgres:15.3

      - name: Run Go tests
        run: go test -v

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: go-backend
      #     IMAGE_TAG: ${{ steps.git-tag.outputs.tag }}
      #     ARCH: ${{ matrix.arch }}
      #   run: |
      #     docker build --no-cache --platform linux/$ARCH -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$ARCH-$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ARCH-$IMAGE_TAG
